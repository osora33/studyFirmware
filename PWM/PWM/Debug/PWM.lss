
PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  000001de  00000252  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001de  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000262  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000294  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000002d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009a0  00000000  00000000  0000030c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008a6  00000000  00000000  00000cac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000378  00000000  00000000  00001552  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  000018cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000425  00000000  00000000  00001934  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000182  00000000  00000000  00001d59  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001edb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee ed       	ldi	r30, 0xDE	; 222
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 31       	cpi	r26, 0x10	; 16
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	10 d0       	rcall	.+32     	; 0xd4 <main>
  b4:	92 c0       	rjmp	.+292    	; 0x1da <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <putch>:
	int i = 0;
	
	while(str[i] != '\0'){
		putch(str[i++]);
	}
}
  b8:	5d 9b       	sbis	0x0b, 5	; 11
  ba:	fe cf       	rjmp	.-4      	; 0xb8 <putch>
  bc:	8c b9       	out	0x0c, r24	; 12
  be:	8b b1       	in	r24, 0x0b	; 11
  c0:	80 62       	ori	r24, 0x20	; 32
  c2:	8b b9       	out	0x0b, r24	; 11
  c4:	08 95       	ret

000000c6 <getch>:
  c6:	5f 9b       	sbis	0x0b, 7	; 11
  c8:	fe cf       	rjmp	.-4      	; 0xc6 <getch>
  ca:	8c b1       	in	r24, 0x0c	; 12
  cc:	9b b1       	in	r25, 0x0b	; 11
  ce:	90 68       	ori	r25, 0x80	; 128
  d0:	9b b9       	out	0x0b, r25	; 11
  d2:	08 95       	ret

000000d4 <main>:

int main(){
	DDRE = 0x08;
  d4:	88 e0       	ldi	r24, 0x08	; 8
  d6:	82 b9       	out	0x02, r24	; 2
	
	TCCR3B = 1 << WGM33 | 1 << WGM32 | 1 << CS30;
  d8:	89 e1       	ldi	r24, 0x19	; 25
  da:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	TCCR3C = 0x00;
  de:	10 92 8c 00 	sts	0x008C, r1	; 0x80008c <__TEXT_REGION_LENGTH__+0x7e008c>
	TCNT3 = 0x0000;
  e2:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  e6:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	UCSR0A = 0x00;
  ea:	1b b8       	out	0x0b, r1	; 11
	UCSR0B = 0x18;
  ec:	88 e1       	ldi	r24, 0x18	; 24
  ee:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = 0x06;
  f0:	86 e0       	ldi	r24, 0x06	; 6
  f2:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	
	UBRR0H = 0x00;
  f6:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 3;
  fa:	83 e0       	ldi	r24, 0x03	; 3
  fc:	89 b9       	out	0x09, r24	; 9
	
	while(1){
		char input = '\0';
		int inputi = 0;
  fe:	c0 e0       	ldi	r28, 0x00	; 0
 100:	d0 e0       	ldi	r29, 0x00	; 0
	
	UBRR0H = 0x00;
	UBRR0L = 3;
	
	while(1){
		char input = '\0';
 102:	80 e0       	ldi	r24, 0x00	; 0
		int inputi = 0;
		
		while(!(inputi >= 1 && inputi <= 8)){
 104:	04 c0       	rjmp	.+8      	; 0x10e <main+0x3a>
			input = getch();
 106:	df df       	rcall	.-66     	; 0xc6 <getch>
			inputi = input  - 0x30;
 108:	c8 2f       	mov	r28, r24
 10a:	d0 e0       	ldi	r29, 0x00	; 0
 10c:	e0 97       	sbiw	r28, 0x30	; 48
	
	while(1){
		char input = '\0';
		int inputi = 0;
		
		while(!(inputi >= 1 && inputi <= 8)){
 10e:	9e 01       	movw	r18, r28
 110:	21 50       	subi	r18, 0x01	; 1
 112:	31 09       	sbc	r19, r1
 114:	28 30       	cpi	r18, 0x08	; 8
 116:	31 05       	cpc	r19, r1
			input = getch();
			inputi = input  - 0x30;
		}
		putch(input);
 118:	b0 f7       	brcc	.-20     	; 0x106 <main+0x32>
 11a:	ce df       	rcall	.-100    	; 0xb8 <putch>
		
		ICR3 = 7372800/DoReMi[inputi-1]/16;
 11c:	21 97       	sbiw	r28, 0x01	; 1
 11e:	cc 0f       	add	r28, r28
 120:	dd 1f       	adc	r29, r29
 122:	c0 50       	subi	r28, 0x00	; 0
 124:	df 4f       	sbci	r29, 0xFF	; 255
 126:	28 81       	ld	r18, Y
 128:	39 81       	ldd	r19, Y+1	; 0x01
 12a:	40 e0       	ldi	r20, 0x00	; 0
 12c:	50 e0       	ldi	r21, 0x00	; 0
 12e:	60 e0       	ldi	r22, 0x00	; 0
 130:	78 e0       	ldi	r23, 0x08	; 8
 132:	87 e0       	ldi	r24, 0x07	; 7
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	13 d0       	rcall	.+38     	; 0x15e <__divmodsi4>
 138:	30 93 81 00 	sts	0x0081, r19	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 13c:	20 93 80 00 	sts	0x0080, r18	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
		TCCR3A = 1 << COM3A0;
 140:	eb e8       	ldi	r30, 0x8B	; 139
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	80 e4       	ldi	r24, 0x40	; 64
 146:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 148:	2f ef       	ldi	r18, 0xFF	; 255
 14a:	8f e3       	ldi	r24, 0x3F	; 63
 14c:	92 e0       	ldi	r25, 0x02	; 2
 14e:	21 50       	subi	r18, 0x01	; 1
 150:	80 40       	sbci	r24, 0x00	; 0
 152:	90 40       	sbci	r25, 0x00	; 0
 154:	e1 f7       	brne	.-8      	; 0x14e <main+0x7a>
 156:	00 c0       	rjmp	.+0      	; 0x158 <main+0x84>
 158:	00 00       	nop
		_delay_ms(100);
		TCCR3A = 0x00;
 15a:	10 82       	st	Z, r1
	}
 15c:	d0 cf       	rjmp	.-96     	; 0xfe <main+0x2a>

0000015e <__divmodsi4>:
 15e:	05 2e       	mov	r0, r21
 160:	97 fb       	bst	r25, 7
 162:	16 f4       	brtc	.+4      	; 0x168 <__divmodsi4+0xa>
 164:	00 94       	com	r0
 166:	0f d0       	rcall	.+30     	; 0x186 <__negsi2>
 168:	57 fd       	sbrc	r21, 7
 16a:	05 d0       	rcall	.+10     	; 0x176 <__divmodsi4_neg2>
 16c:	14 d0       	rcall	.+40     	; 0x196 <__udivmodsi4>
 16e:	07 fc       	sbrc	r0, 7
 170:	02 d0       	rcall	.+4      	; 0x176 <__divmodsi4_neg2>
 172:	46 f4       	brtc	.+16     	; 0x184 <__divmodsi4_exit>
 174:	08 c0       	rjmp	.+16     	; 0x186 <__negsi2>

00000176 <__divmodsi4_neg2>:
 176:	50 95       	com	r21
 178:	40 95       	com	r20
 17a:	30 95       	com	r19
 17c:	21 95       	neg	r18
 17e:	3f 4f       	sbci	r19, 0xFF	; 255
 180:	4f 4f       	sbci	r20, 0xFF	; 255
 182:	5f 4f       	sbci	r21, 0xFF	; 255

00000184 <__divmodsi4_exit>:
 184:	08 95       	ret

00000186 <__negsi2>:
 186:	90 95       	com	r25
 188:	80 95       	com	r24
 18a:	70 95       	com	r23
 18c:	61 95       	neg	r22
 18e:	7f 4f       	sbci	r23, 0xFF	; 255
 190:	8f 4f       	sbci	r24, 0xFF	; 255
 192:	9f 4f       	sbci	r25, 0xFF	; 255
 194:	08 95       	ret

00000196 <__udivmodsi4>:
 196:	a1 e2       	ldi	r26, 0x21	; 33
 198:	1a 2e       	mov	r1, r26
 19a:	aa 1b       	sub	r26, r26
 19c:	bb 1b       	sub	r27, r27
 19e:	fd 01       	movw	r30, r26
 1a0:	0d c0       	rjmp	.+26     	; 0x1bc <__udivmodsi4_ep>

000001a2 <__udivmodsi4_loop>:
 1a2:	aa 1f       	adc	r26, r26
 1a4:	bb 1f       	adc	r27, r27
 1a6:	ee 1f       	adc	r30, r30
 1a8:	ff 1f       	adc	r31, r31
 1aa:	a2 17       	cp	r26, r18
 1ac:	b3 07       	cpc	r27, r19
 1ae:	e4 07       	cpc	r30, r20
 1b0:	f5 07       	cpc	r31, r21
 1b2:	20 f0       	brcs	.+8      	; 0x1bc <__udivmodsi4_ep>
 1b4:	a2 1b       	sub	r26, r18
 1b6:	b3 0b       	sbc	r27, r19
 1b8:	e4 0b       	sbc	r30, r20
 1ba:	f5 0b       	sbc	r31, r21

000001bc <__udivmodsi4_ep>:
 1bc:	66 1f       	adc	r22, r22
 1be:	77 1f       	adc	r23, r23
 1c0:	88 1f       	adc	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	1a 94       	dec	r1
 1c6:	69 f7       	brne	.-38     	; 0x1a2 <__udivmodsi4_loop>
 1c8:	60 95       	com	r22
 1ca:	70 95       	com	r23
 1cc:	80 95       	com	r24
 1ce:	90 95       	com	r25
 1d0:	9b 01       	movw	r18, r22
 1d2:	ac 01       	movw	r20, r24
 1d4:	bd 01       	movw	r22, r26
 1d6:	cf 01       	movw	r24, r30
 1d8:	08 95       	ret

000001da <_exit>:
 1da:	f8 94       	cli

000001dc <__stop_program>:
 1dc:	ff cf       	rjmp	.-2      	; 0x1dc <__stop_program>
